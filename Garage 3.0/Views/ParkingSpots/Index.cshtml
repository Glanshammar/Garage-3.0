@model IEnumerable<Garage_3._0.Models.ViewModels.ParkingSpotViewModel>

@{
    ViewData["Title"] = "Parking Spots";
}

<h1>Parking Spots</h1>

<div class="grid">
    @foreach (var spot in Model)
    {
        <div class="spot @(spot.IsOccupied ? "occupied" : "available")"
             onclick="toggleSpotStatus(@spot.Id)">
            @spot.SpotNumber
        </div>
    }
</div>

<style>
    .grid {
        display: grid;
        grid-template-columns: repeat(5, 1fr); /* 5 columns */
        gap: 10px;
    }

    .spot {
        width: 100px;
        height: 100px;
        text-align: center;
        line-height: 100px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-weight: bold;
        cursor: pointer;
    }

    .occupied {
        background-color: red;
        color: white;
    }

    .available {
        background-color: green;
        color: white;
    }
</style>

<script>
    function toggleSpotStatus(spotId) {
        fetch(`/ParkingSpot/ToggleStatus/${spotId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (response.ok) {
                    location.reload(); // Reload the page to reflect the updated status
                } else {
                    alert("Could not update the parking spot status.");
                }
            })
            .catch(error => console.error('Error:', error));
    }
</script>
